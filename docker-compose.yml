# For more information: https://laravel.com/docs/sail
version: '3'
services:
    app:
        build:
            context: ./vendor/laravel/sail/runtimes/8.1
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.1/app
        container_name: micro-videos-app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${HMR_PORT:-8080}:8080'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            DB_HOST: db
        volumes:
            - '.:/var/www/html'
        networks:
            - app-net
        depends_on:
            - db
            - redis
    db:
        image: 'mysql:5.7'
        container_name: micro-videos-db
        ports:
            - '${DB_PORT}:3306'
        environment:
            - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_USER=${DB_USERNAME}
            - MYSQL_PASSWORD=${DB_PASSWORD}
            - MYSQL_ALLOW_EMPTY_PASSWORD=1
        volumes:
            - ./.docker/dbdata:/var/lib/mysql
            - ./.docker/mysql/create-test-db.sh:/docker-entrypoint-initdb.d/create-test-db.sh
        networks:
            - app-net
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s

    redis:
        image: 'redis:alpine'
        container_name: micro-videos-redis
        ports:
            - '${REDIS_PORT:-6379}:6379'
        networks:
            - app-net
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s

    nginx:
        build: .docker/nginx
        container_name: micro-videos-nginx
        tty: true
        ports:
            - '${NGINX_PORT:-8000}:80'
        volumes:
            - .:/var/www
        networks:
            - app-net
        depends_on:
            - app
networks:
    app-net:
        driver: bridge
